<!-- This is a test with 1 robot consisting of ALL of the behavioural features.
call the services on test_bot, however you like. Try to break it. Use all the functionality.
-->

<launch>
  <master auto="start"/>
  <arg name="robot_type" default="pioneer3"/>
  <param name="/use_sim_time" value="true"/>
  <node pkg="map_server" type="map_server" name="map_server" args="$(find arc_stage)/maps/config/arc_small.yaml" respawn="false" >
    <param name="frame_id" value="/map" />
  </node> 


<group ns="arc">
  <node pkg="arc_stage" type="arc_stage" name="arc_stage" args="-u $(find arc_stage)/world/test_single_robot_full.world" respawn="false">
    <param name="base_watchdog_timeout" value="0.2"/>
  </node>
  <!-- BEGIN ROBOT 0 -->
  <group ns="test_bot">

    <!-- BEHAVIOUR FOR ROBOT-->
    <node name="arc_base" pkg="arc_behaviour" type="arc_base">
	<rosparam param="schemas">["random_wander_ms"]</rosparam>
    </node>

    <node name="random_wander_ms" pkg="arc_behaviour" type="random_wander_ms">
	<rosparam param="frame_id">"map"</rosparam>
    </node>

     <node name="detect_marker_ps" pkg="arc_behaviour" type="detect_marker_ps">
        <param name="max_range" value="5"/>
    </node>
    <node name="detect_robot_ps" pkg="arc_behaviour" type="detect_robot_ps">
        <param name="max_range" value="5"/>
    </node>
    <node name="detect_victim_ps" pkg="arc_behaviour" type="detect_victim_ps">
        <param name="max_range" value="6"/>
    </node>

    <node name="detect_debris_ps" pkg="arc_behaviour" type="detect_debris_ps">
        <param name="max_range" value="6"/>
    </node>

    <node name="clean_debris_ms" pkg="arc_behaviour" type="clean_debris_ms">
	<param name="max_cleaning_range" value="2"/>
	<param name="priority" value="2"/>
    </node>

   <node name="handle_marker_ms" pkg="arc_behaviour" type="handle_marker_ms">
	<param name="max_pickup_range" value="2"/>
	<param name="priority" value="2"/>
    </node>

    <node name="navigation_adapter" pkg="arc_behaviour" type="navigation_adapter">
    </node>

    <!-- NAVIGATION CONFIG -->
    <param name="tf_prefix" value="test_bot" />
    <node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="false" output="screen"> 
	  <param name="tf_prefix" value="test_bot" />
      <param name="odom_frame_id" value="test_bot/odom" />
      <param name="base_frame_id" value="test_bot/base_link" />
    </node> 


    <node pkg="move_base" type="move_base" respawn="false" name="move_base_node" output="screen">
      <remap from="map" to="/map" />
      <param name="controller_frequency" value="10.0" />
      <rosparam file="$(find arc_navigation)/move_base_config/$(arg robot_type)_costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find arc_navigation)/move_base_config/$(arg robot_type)_local_costmap_params.yaml" command="load" />
      <rosparam file="$(find arc_navigation)/move_base_config/$(arg robot_type)_global_costmap_params.yaml" command="load" />
      <rosparam file="$(find arc_navigation)/move_base_config/$(arg robot_type)_base_local_planner_params.yaml" command="load" />
      <rosparam file="$(find arc_navigation)/move_base_config/$(arg robot_type)_dwa_local_playyer_params.yaml" command="load" />
    </node>
  </group>
<node name="rviz" pkg="rviz" type="rviz" args="-d $(find arc_navigation)/single_robot.rviz" />
</group>
</launch>
