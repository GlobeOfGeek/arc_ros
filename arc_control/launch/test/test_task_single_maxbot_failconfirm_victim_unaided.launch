<!--
Goal of this test is to ensure a single maxbot is capable of detecting false positives in the environment. That is, the robot should be able to approach the potential victims and output that it is not a victim.
Validation/Functionality Tests: 
Send the following request. The robot should detect all 3 victims and broadcast their locations.
____
rostopic pub /artest_bot/task_handler/task_requests arc_msgs/TaskRequest "task_id: 1
created: {secs: 0, nsecs: 0}
task_name: 'confirm_victim'
parameters:
  bools:
  - {name: '', value: false}
  ints:
  - {name: '', value: 0}
  strs:
  - {name: 'victim_list', value: '(2,12.536,4.015)|(3,5.45,7.913)|(1,9,6.43)'}
  doubles:
  - {name: '', value: 0.0}
  groups:
  - {name: '', state: false, id: 0, parent: 0}
request_type: 0" 
____

-send this request below. the first victim in list is actually not a victim, so there is nothing there.  the robot should realize this and broadcast that it's actually not a victim, and move on to second potential victim, and report that it found 1 victims and 1 false positive.
rostopic pub /artest_bot/task_handler/task_requests arc_msgs/TaskRequest "task_id: 0
created: {secs: 0, nsecs: 0}
task_name: 'confirm_victim'
parameters:
  bools:
  - {name: '', value: false}
  ints:
  - {name: '', value: 0}
  strs:
  - {name: 'victim_list', value: '(4,14.739,15.652)|(11,9.788,10.488)'}
  doubles:
  - {name: '', value: 0.0}
  groups:
  - {name: '', state: false, id: 0, parent: 0}
request_type: 0" 
 -->

<launch>
  <master auto="start"/>
  <arg name="robot_type" default="debrisbot"/>
  <param name="/use_sim_time" value="true"/>
  <node pkg="map_server" type="map_server" name="map_server" args="$(find arc_stage)/maps/config/test/test_clean_debris_ms.yaml" respawn="false" >
    <param name="frame_id" value="/map" />
  </node> 

<group ns="arc">
<node name="rviz" pkg="rviz" type="rviz" args="-d $(find arc_navigation)/single_robot.rviz" />
<group ns="test_bot">
<!--<node pkg="arc_tasks" type="task_confirm_victim_server" name="task_confirm_victim_server" output="screen"/>-->
	<node pkg="arc_tasks" type="task_confirm_victim_client" name="task_confirm_victim_client" output="screen"/> 
  <include file="$(find arc_control)/launch/robots/$(arg robot_type)/$(arg robot_type)_behaviour.launch">
	<arg name="robot_name" value="test_bot"/>
</include>

</group>
  <node pkg="arc_stage" type="arc_stage" name="arc_stage" args="-u $(find arc_stage)/world/test_$(arg robot_type)_task_single_robot_confirm_victim_unaided.world" respawn="false">
    <param name="base_watchdog_timeout" value="0.2"/>
  </node>
</group>
</launch>
